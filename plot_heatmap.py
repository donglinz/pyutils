# import matplotlib.pyplot as plt
# import numpy as np
# data = [
# [0.1001,0.1002,0.1132,0.1004,0.09993,0.0984,0.1012,0.1004,0.9824,0.1001],
# [0.1001,0.09606,0.09842,0.1001,0.1001,0.09896,0.1013,0.1006,0.09903,0.1001],
# [0.1001,0.1002,0.1132,0.1001,0.1,0.09915,0.1012,0.1006,0.988,0.1001],
# [0.09999,0.1003,0.09829,0.09775,0.1001,0.09896,0.1009,0.1006,0.09944,0.1001],
# [0.1,0.1005,0.09841,0.1003,0.09937,0.09882,0.1011,0.1005,0.09903,0.09996],
# [0.1001,0.1003,0.09841,0.1002,0.1,0.1102,0.1023,0.1004,0.09907,0.1001],
# [0.09982,0.1003,0.09844,0.1,0.1001,0.09892,0.08783,0.1007,0.09935,0.1001],
# [0.09971,0.1004,0.09821,0.1004,0.1002,0.09893,0.101,0.09747,0.09949,0.1001],
# [0.1001,0.1005,0.0986,0.09998,0.1002,0.09886,0.1015,0.1006,0.1087,0.1001],
# [0.1,0.1007,0.09851,0.1003,0.1,0.09886,0.1009,0.1005,0.09897,0.9923]
# ]

# def norm(data):
#     data = data - data.min()
#     data = data / (data.max() - data.min())
#     return data

# data = np.array(data)

# data = np.log(data)
# data = norm(data)
# data = np.log(data)

# plt.imshow(data, cmap='hot', interpolation='nearest')

# plt.show()


import numpy as np
import tensorflow as tf
import seaborn as sns
import matplotlib.pylab as plt
import pandas as pd

data = [
[0.1001,0.1002,0.1132,0.1004,0.09993,0.0984,0.1012,0.1004,0.09824,0.1001],
[0.1001,0.09606,0.09842,0.1001,0.1001,0.09896,0.1013,0.1006,0.09903,0.1001],
[0.1001,0.1002,0.1132,0.1001,0.1,0.09915,0.1012,0.1006,0.0988,0.1001],
[0.09999,0.1003,0.09829,0.09775,0.1001,0.09896,0.1009,0.1006,0.09944,0.1001],
[0.1,0.1005,0.09841,0.1003,0.09937,0.09882,0.1011,0.1005,0.09903,0.09996],
[0.1001,0.1003,0.09841,0.1002,0.1,0.1102,0.1023,0.1004,0.09907,0.1001],
[0.09982,0.1003,0.09844,0.1,0.1001,0.09892,0.08783,0.1007,0.09935,0.1001],
[0.09971,0.1004,0.09821,0.1004,0.1002,0.09893,0.101,0.09747,0.09949,0.1001],
[0.1001,0.1005,0.0986,0.09998,0.1002,0.09886,0.1015,0.1006,0.1087,0.1001],
[0.1,0.1007,0.09851,0.1003,0.1,0.09886,0.1009,0.1005,0.09897,0.09923]
]

data = np.array(data)
ax = sns.heatmap(data, linewidth=0.5, vmin=data.min(),vmax=data.max(), yticklabels=[], cmap="YlGnBu")
plt.ylabel('Different Inputs')
plt.xlabel('Different Routes')
plt.show()